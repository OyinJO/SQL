Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10,000
ii. Business table = 10,000
iii. Category table = 10,000
iv. Checkin table = 10,000
v. elite_years table = 10,000
vi. friend table = 10,000
vii. hours table = 10,000
viii. photo table = 10,000
ix. review table = 10,000
x. tip table = 10,000
xi. user table = 10,000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10,000 distinct records using primary key id
ii. Hours = 1,562 distinct records usng foreign key business_id
iii. Category = 2,643 distinct records using foreign key business_id
iv. Attribute = 1,115 distinct records using foreign key business_id
v. Review = 10,000 distinct records using primary key id
			8090 distinct records using foreign key business_id
			9581 distinct records using foreign key user_id
vi. Checkin = 493 distinct records using business_id key
vii. Photo = 10,000 distinct records using id key
			= 6493 distinct records using forign key business_id 
viii. Tip = 3,979 distinct records using foreign key business_id
			= 537 distinct records using foreign key user_id
ix. User = 10,000 distinct records using primary key id
x. Friend = 11 distinct recordsusing foreign key user_id
xi. Elite_years = 2780 distinct recordsusing foreign key user_id

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	

Example SQL code used:
	SELECT count(distinct id)
	FROM business

3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:
	There are no columns with null values
	
	SQL code used to arrive at answer:
	SELECT count(*) as CountNull
	FROM user
	where id is NULL or name is NULL or review_count is NULL or yelping_since is NULL or useful is NULL 
	or funny is NULL or cool is NULL or fans is NULL or average_stars is NULL or compliment_hot is NULL 
	or compliment_more is NULL or compliment_profile is NULL or compliment_cute is NULL or 
	compliment_list is NULL or compliment_note is NULL or compliment_plain is NULL or compliment_cool is NULL 
	or compliment_funny is NULL or compliment_writer is NULL or compliment_photos is NULL


			

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1		max:5		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000	avg:24.2995
		
	Example SQL code used:
	SELECT min(stars), max(stars), avg(stars)
	FROM review

5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
		SELECT city,sum (review_count) as numreviews
		FROM business 
		group by city 
		order by numreviews desc
	
	Copy and Paste the Result Below:
		+-----------------+------------+
		| city            | numreviews |
		+-----------------+------------+
		| Las Vegas       |      82854 |
		| Phoenix         |      34503 |
		| Toronto         |      24113 |
		| Scottsdale      |      20614 |
		| Charlotte       |      12523 |
		| Henderson       |      10871 |
		| Tempe           |      10504 |
		| Pittsburgh      |       9798 |
		| Montréal        |       9448 |
		| Chandler        |       8112 |
		| Mesa            |       6875 |
		| Gilbert         |       6380 |
		| Cleveland       |       5593 |
		| Madison         |       5265 |
		| Glendale        |       4406 |
		| Mississauga     |       3814 |
		| Edinburgh       |       2792 |
		| Peoria          |       2624 |
		| North Las Vegas |       2438 |
		| Markham         |       2352 |
		| Champaign       |       2029 |
		| Stuttgart       |       1849 |
		| Surprise        |       1520 |
		| Lakewood        |       1465 |
		| Goodyear        |       1155 |
		+-----------------+------------+
		(Output limit exceeded, 25 of 362 total rows shown)
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
	SELECT stars ,count(*) as Count
	From business
	where city='Avon'
	group by stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
	+-------+-------+
	| stars | Count |
	+-------+-------+
	|   1.5 |     1 |
	|   2.5 |     2 |
	|   3.5 |     3 |
	|   4.0 |     2 |
	|   4.5 |     1 |
	|   5.0 |     1 |
	+-------+-------+

ii. Beachwood

SQL code used to arrive at answer:
	SELECT stars ,count(*) as Count
	From business
	where city='Beachwood'
	group by stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
	+-------+-------+
	| stars | Count |
	+-------+-------+
	|   2.0 |     1 |
	|   2.5 |     1 |
	|   3.0 |     2 |
	|   3.5 |     2 |
	|   4.0 |     1 |
	|   4.5 |     2 |
	|   5.0 |     5 |
	+-------+-------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	SELECT id,name, review_count
	FROM user
	order by review_count desc
	LIMIT 3
		
	Copy and Paste the Result Below:
	+------------------------+--------+--------------+
	| id                     | name   | review_count |
	+------------------------+--------+--------------+
	| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
	| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
	| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
	+------------------------+--------+--------------+


8. Does posing more reviews correlate with more fans?
	No.
	
	Please explain your findings and interpretation of the results:
	If posting more reviews was positively correlated with gaining more fans when 
	I sorted the fans column in descending order the number of review_count would 
	automatically be shown in descending order.
	
	SQL code: 
	SELECT id,name,fans, review_count
	FROM user
	order by fans desc
	
	Copy and Paste Results:
	+------------------------+-----------+------+--------------+
	| id                     | name      | fans | review_count |
	+------------------------+-----------+------+--------------+
	| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |          609 |
	| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |          968 |
	| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |         1153 |
	| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |         2000 |
	| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |          930 |
	| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |          813 |
	| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |          377 |
	| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |         1215 |
	| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |          862 |
	| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |          834 |
	| -B-QEUESGWHPE_889WJaeg | Mark      |  115 |          861 |
	| -DmqnhW4Omr3YhmnigaqHg | Tiffany   |  111 |          408 |
	| -cv9PPT7IHux7XUc9dOpkg | bernice   |  105 |          255 |
	| -DFCC64NXgqrxlO8aLU5rg | Roanna    |  104 |         1039 |
	| -IgKkE8JvYNWeGu8ze4P8Q | Angela    |  101 |          694 |
	| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |  101 |         1246 |
	| -4viTt9UC44lWCFJwleMNQ | Ben       |   96 |          307 |
	| -3i9bhfvrM3F1wsC9XIB8g | Linda     |   89 |          584 |
	| -kLVfaJytOJY2-QdQoCcNQ | Christina |   85 |          842 |
	| -ePh4Prox7ZXnEBNGKyUEA | Jessica   |   84 |          220 |
	| -4BEUkLvHQntN6qPfKJP2w | Greg      |   81 |          408 |
	| -C-l8EHSLXtZZVfUAUhsPA | Nieves    |   80 |          178 |
	| -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |   78 |          754 |
	| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |   76 |         1339 |
	| -0zEEaDFIjABtPQni0XlHA | Nicole    |   73 |          161 |
	+------------------------+-----------+------+--------------+
	(Output limit exceeded, 25 of 10000 total rows shown)

9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	Love is in 1780 reviews
	Hate is in 232 reviews
	There are more reviews with the word hate than there are reviews the word love.

	
	SQL code used to arrive at answer:
	SELECT count(id)
	FROM review
	where text like "%hate%" 
	
	SELECT count(id) as Count
	FROM review
	where text like "%like%" 
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	SELECT name,fans
	FROM user
	order by fans desc
	LIMIT 10
	
	Copy and Paste the Result Below:
	+-----------+------+
	| name      | fans |
	+-----------+------+
	| Amy       |  503 |
	| Mimi      |  497 |
	| Harald    |  311 |
	| Gerald    |  253 |
	| Christine |  173 |
	| Lisa      |  159 |
	| Cat       |  133 |
	| William   |  126 |
	| Fran      |  124 |
	| Lissa     |  120 |
	+-----------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	Decided to find the most popular category which is 'Restaurant
	 SQL code:
		SELECT C.category, count (B.city) as categorycount
		FROM Business B
		LEFT JOIN Category C ON B.id=C.business_id
		where category is not null
		group by category
		order by categorycount desc
		LIMIT 3

	 Result:
		+-------------+-----------+
		| category    | citycount |
		+-------------+-----------+
		| Restaurants |        71 |
		| Shopping    |        30 |
		| Food        |        23 |
		+-------------+-----------+

	Decided to find the city with the highest number of restaurants(most popular category)which is Toronto
	SQL code: 
	SELECT city, count(city) as cityCount
	from business
	where id in (SELECT
	 business_id
	 FROM category
	 where category='Restaurants'
	)
	group by city
	order by cityCount desc
	LIMIT 5
	
	Result:
	+-------------+-----------+
	| city        | cityCount |
	+-------------+-----------+
	| Toronto     |        10 |
	| Phoenix     |         6 |
	| Las Vegas   |         4 |
	| Mississauga |         4 |
	| Edinburgh   |         3 |
	+-------------+-----------+
	
i. Do the two groups you chose to analyze have a different distribution of hours?
	No. All the restaurants (with hours data) are open on Saturday. 
	The time of open and close between the businesses are all different but they all have similar opening lengths ~ 10 hrs. 

ii. Do the two groups you chose to analyze have a different number of reviews?
    Yes restaurants with a high rating(4-5 stars) have more than twice the number of reviews as those with mid rating(2-3.9 stars).
	
	SQL code:
	SELECT sum(B.review_count) as numofreviews
	,CASE 
	WHEN stars >=2 and stars <=3.9 THEN 'Mid'
	WHEN stars >=4 and stars <=5 THEN 'High'
	Else 'Low'
	END starscategory
	FROM Business B
	LEFT JOIN Category C ON B.id=C.business_id
	where city='Toronto' and category ='Restaurants' and starscategory is not 'Low'
	group by starscategory     
	
	+---------------------+---------------+
	| sum(B.review_count) | starscategory |
	+---------------------+---------------+
	|                 206 | High          |
	|                  89 | Mid           |
	+---------------------+---------------+
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
	No, all businesses have different locations / postal codes. 
	
SQL code used for analysis:
	SELECT name,B.city, C.category, B.postal_code, H.hours, B.stars
	,CASE 
	WHEN stars >=2 and stars <=3.9 THEN 'Mid'
	WHEN stars >=4 and stars <=5 THEN 'High'
	Else 'Low'
	END starscategory
	FROM Business B
	LEFT JOIN Category C ON B.id=C.business_id
	LEFT JOIN Hours H on B.id=H.business_id
	where city='Toronto' and category ='Restaurants' and starscategory is not 'Low'
	group by name
	order by stars desc
	
Result of Code:
	+--------------------+---------+-------------+-------------+----------------------+-------+---------------+
	| name               | city    | category    | postal_code | hours                | stars | starscategory |
	+--------------------+---------+-------------+-------------+----------------------+-------+---------------+
	| Cabin Fever        | Toronto | Restaurants | M6P 1A6     | Saturday|16:00-2:00  |   4.5 | High          |
	| Sushi Osaka        | Toronto | Restaurants | M9A 1C2     | Saturday|11:00-23:00 |   4.5 | High          |
	| Edulis             | Toronto | Restaurants | M5V         | Saturday|18:00-23:00 |   4.0 | High          |
	| Mama Mia           | Toronto | Restaurants | M6C 1B6     | None                 |   4.0 | High          |
	| Naniwa-Taro        | Toronto | Restaurants | M2N 5R6     | None                 |   4.0 | High          |
	| The Kosher Gourmet | Toronto | Restaurants | M6B         | None                 |   3.5 | Mid           |
	| Big Smoke Burger   | Toronto | Restaurants | M4B 2L9     | Saturday|10:30-21:00 |   3.0 | Mid           |
	| Pizzaiolo          | Toronto | Restaurants | M5H 1X6     | Saturday|10:00-4:00  |   3.0 | Mid           |
	| 99 Cent Sushi      | Toronto | Restaurants | M5B 2E5     | Saturday|11:00-23:00 |   2.0 | Mid           |
	+--------------------+---------+-------------+-------------+----------------------+-------+---------------+
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: Open business have more reviews than closed businesses.
         
         
ii. Difference 2: Open businesses have a higher averge rating than that of close businesses.
         
         
SQL code used for analysis:
	SELECT is_open, avg(stars),count(review_count)
	from business
	group by is_open
	
Result:
	+---------+---------------+---------------------+
	| is_open |    avg(stars) | count(review_count) |
	+---------+---------------+---------------------+
	|       0 | 3.52039473684 |                1520 |
	|       1 | 3.67900943396 |                8480 |
	+---------+---------------+---------------------+
	
